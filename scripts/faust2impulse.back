#!/bin/bash

#-------------------------------------------------------------------
# Check darwin specifics
#
if [[ $(uname) == Darwin ]]; then
    MARCH=""
else 
    MARCH="-march=native"
fi
	
#-------------------------------------------------------------------
# Default compilation flags for gcc and icc :
#
MYGCCFLAGS="-O3 $MARCH -mfpmath=sse -msse -msse2 -msse3 -ffast-math -ftree-vectorize"
MYICCFLAGS="-O3 -xHost -ftz -fno-alias -fp-model fast=2"

CXX=g++
CXXFLAGS=$MYGCCFLAGS

f=$1
impLength=$2
impType=$3

echo "process = 1-1' <: component(\"$f\");" > $f.imp
	
# compile faust to c++
faust -a scripts/matlabplot.cpp "$f.imp" -o "$f.imp.cpp"

# compile c++ to binary
(
    ${CXX=g++} ${CXXFLAGS=-O3} "$f.imp.cpp" -o "${f%.dsp}"
) > /dev/null

# run binary to generate data file
./"${f%.dsp}" -n $impLength > "${f%.dsp}.m"

if [[ $impType == "Impulse-Response" ]]; then
echo "
plot(faustout);
xlabel('Time (samples)');
ylabel('Amplitude');
print -dsvg ${f%.dsp}.imp.svg" >> ${f%.dsp}.m
elif [[ $impType == "Spectrogram" ]]; then
echo "
spectrogram(faustout);
print -dsvg ${f%.dsp}.spec.svg" >> ${f%.dsp}.m
else
echo "
Fs = 44100;
L = $impLength;
NFFT = 2^nextpow2(L);
Y = fft(faustout,NFFT);
f = Fs/2*linspace(0,1,NFFT/2+1);
plot(f,abs(Y(1:NFFT/2+1)));
xlabel('Frequency (Hz)');
ylabel('|Y(f)|');
print -dsvg ${f%.dsp}.impspec.svg" >> ${f%.dsp}.m
fi

#display data file
octave ${f%.dsp}.m  > /dev/null

rm $f.imp $f.imp.cpp ${f%.dsp} #${f%.dsp}.m
